name: Build and Release Assets

on:
  push:
    branches: [ main ]
    paths:
      - 'assets/**'
      - '.github/workflows/build-and-release.yml'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml
    
    - name: Create asset packages
      run: |
        mkdir -p build
        
        # Package models
        if [ -d "assets/models" ] && [ "$(ls -A assets/models)" ]; then
          cd assets/models
          zip -r ../../build/ai_models_v1.zip .
          cd ../..
        fi
        
        # Package images
        if [ -d "assets/images" ] && [ "$(ls -A assets/images)" ]; then
          cd assets/images
          zip -r ../../build/app_images_v1.zip .
          cd ../..
        fi
        
        # Package animations
        if [ -d "assets/animations" ] && [ "$(ls -A assets/animations)" ]; then
          cd assets/animations
          zip -r ../../build/lottie_animations_v1.zip .
          cd ../..
        fi
        
        # Package fonts
        if [ -d "assets/fonts" ] && [ "$(ls -A assets/fonts)" ]; then
          cd assets/fonts
          zip -r ../../build/custom_fonts_v1.zip .
          cd ../..
        fi
        
        # Package data
        if [ -d "assets/data" ] && [ "$(ls -A assets/data)" ]; then
          cd assets/data
          zip -r ../../build/app_data_v1.zip .
          cd ../..
        fi
    
    - name: Generate checksums
      run: |
        cd build
        sha256sum * > checksums.sha256
        cat checksums.sha256
    
    - name: Upload assets to release
      uses: softprops/action-gh-release@v2
      with:
        files: build/*
        tag_name: latest
        name: Latest Assets Release
        body: |
          Automated asset release with all packaged assets.
          
          **Verification**
          Verify downloaded files with:
          ```bash
          sha256sum -c checksums.sha256
          ```
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
